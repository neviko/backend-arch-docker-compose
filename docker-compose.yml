version: "3.8"
services:
  nodeserver:
    build:
      context: ./server
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
    networks:
      - rabbitmq_nodejs

  nginx:
    restart: always
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - nodeserver
    networks:
      - rabbitmq_nodejs

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_nodejs

  consumer:
    build:
      context: ./consumer
    depends_on:
      - mongodb
      - rabbitmq
    command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- node index.js'
    environment:
      NODE_ENV: production
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - rabbitmq_nodejs

  mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - rabbitmq_nodejs

  mongo-express:
    image: mongo-express
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123456
    volumes:
      - mongodb-data
    networks:
      - rabbitmq_nodejs

networks:
  rabbitmq_nodejs:
    driver: bridge

volumes:
  mongodb-data:
    driver: local